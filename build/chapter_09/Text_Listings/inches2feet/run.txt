bob@bob-MS-7522:~/NoStarch/x-86/progs/working/chapter_09/inches2feet$ gdb ./inches2feet 
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./inches2feet...
(gdb) l
1	/* inches2feet.c
2	 * Converts inches to feet and inches.
3	 */
4	
5	#include <stdio.h>
6	#define inchesPerFoot 12
7	
8	int main(void)
9	{
10	  register int feet;
(gdb) 
11	  register int inchesRem;
12	  int inches;
13	  int *ptr;
14	
15	  ptr = &inches;
16	
17	  printf("Enter inches: ");
18	  scanf("%i", ptr);
19	  
20	  feet = inches / inchesPerFoot;
(gdb) 
21	  inchesRem = inches % inchesPerFoot;
22	  printf("%i\" = %i' %i\"\n", inches, feet, inchesRem);
23	
24	  return 0;
25	}


(gdb) b 17
Breakpoint 1 at 0x11af: file inches2feet.c, line 17.
(gdb) b 20
Breakpoint 2 at 0x11d8: file inches2feet.c, line 20.



(gdb) r
Starting program: /home/bob/NoStarch/x-86/progs/working/chapter_09/inches2feet/inches2feet 

Breakpoint 1, main () at inches2feet.c:17
17	  printf("Enter inches: ");
(gdb) i r
rax            0x7fffffffdeac      140737488346796
rbx            0x555555555260      93824992236128
rcx            0x555555555260      93824992236128
rdx            0x7fffffffdfd8      140737488347096
rsi            0x7fffffffdfc8      140737488347080
rdi            0x1                 1
rbp            0x7fffffffded0      0x7fffffffded0
rsp            0x7fffffffdea0      0x7fffffffdea0
r8             0x0                 0
r9             0x7ffff7fe0d50      140737354009936
r10            0x7                 7
r11            0x2                 2
r12            0x5555555550a0      93824992235680
r13            0x7fffffffdfc0      140737488347072
r14            0x0                 0
r15            0x0                 0
rip            0x5555555551af      0x5555555551af <main+38>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0


(gdb) print &feet
Address requested for identifier "feet" which is in register $r12
(gdb) print &inchesRem
Address requested for identifier "inchesRem" which is in register $rbx
(gdb) print &inches
$1 = (int *) 0x7fffffffdeac
(gdb) print &ptr
$2 = (int **) 0x7fffffffdeb0


(gdb) i r rbx r12
rbx            0x555555555260      93824992236128
r12            0x5555555550a0      93824992235680


(gdb) c
Continuing.
Enter inches: 123

Breakpoint 2, main () at inches2feet.c:20
20	  feet = inches / inchesPerFoot;


(gdb) print inches
$3 = 123


(gdb) n
21	  inchesRem = inches % inchesPerFoot;
(gdb) 
22	  printf("%i\" = %i' %i\"\n", inches, feet, inchesRem);
(gdb) i r rbx r12
rbx            0x3                 3
r12            0xa                 10
(gdb) print $rbx
$4 = 3
(gdb) print $r12
$5 = 10
(gdb) print feet
$6 = 10
(gdb) print inchesRem
$7 = 3


(gdb) i r
rax            0x78                120
rbx            0x3                 3
rcx            0xa                 10
rdx            0x7b                123
rsi            0x0                 0
rdi            0x7fffffffd960      140737488345440
rbp            0x7fffffffded0      0x7fffffffded0
rsp            0x7fffffffdea0      0x7fffffffdea0
r8             0xa                 10
r9             0x0                 0
r10            0x7ffff7f5bac0      140737353464512
r11            0x0                 0
r12            0xa                 10
r13            0x7fffffffdfc0      140737488347072
r14            0x0                 0
r15            0x0                 0
rip            0x55555555521e      0x55555555521e <main+149>
eflags         0x206               [ PF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0


(gdb) c
Continuing.
123" = 10' 3"
[Inferior 1 (process 3874) exited normally]
(gdb) 



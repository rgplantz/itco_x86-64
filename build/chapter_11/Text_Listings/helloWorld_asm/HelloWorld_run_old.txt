bob@bob-MS-7522:~/NoStarch/x-86/progs/chap11/helloWorld_asm$ gdb ./helloWorld
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./helloWorld...
(gdb) b main
Breakpoint 1 at 0x1139: file helloWorld.s, line 18.
(gdb) run
Starting program: /home/bob/NoStarch/x-86/progs/chap11/helloWorld_asm/helloWorld 

Breakpoint 1, main () at helloWorld.s:18
18	        push    rbp             # save caller's frame pointer
(gdb) 



(gdb) i r rbp rsp
rbp            0x0                 0x0
rsp            0x7fffffffde88      0x7fffffffde88
(gdb) x/2xg 0x7fffffffde80
0x7fffffffde80:	0x0000555555555160	0x00007ffff7de70b3
(gdb) 



(gdb) si
19	        mov     rbp, rsp        # our frame pointer
(gdb) 
21	        mov     edx, msgLength  # message length       
(gdb) 



(gdb) i r rbp rsp
rbp            0x7fffffffde80      0x7fffffffde80
rsp            0x7fffffffde80      0x7fffffffde80
(gdb) 




(gdb) x/2xg 0x7fffffffde80
0x7fffffffde80:	0x0000000000000000	0x00007ffff7de70b3
(gdb) 




(gdb) li
13	# Code
14	        .text
15	        .globl  main
16	        .type   main, @function
17	main:
18	        push    rbp             # save caller's frame pointer
19	        mov     rbp, rsp        # our frame pointer
20	
21	        mov     edx, msgLength  # message length       
22	        lea     rsi, message[rip]  # message address
(gdb) 
23	        mov     edi, STDOUT     # the screen
24	        call    write@plt       # write message
25	
26	        mov     eax, 0          # return 0
27	
28	        pop     rbp             # restore caller frame pointer
29	        ret                     # back to caller
30	
(gdb) b 24
Breakpoint 2 at 0x55555555514e: file helloWorld.s, line 24.
(gdb) cont
Continuing.

Breakpoint 2, main () at helloWorld.s:24
24	        call    write@plt       # write message
(gdb) 




(gdb) i r rdx rsi rdi
rdx            0xe                 14
rsi            0x555555556004      93824992239620
rdi            0x1                 1
(gdb) x/15c 0x555555556004
0x555555556004:	72 'H'	101 'e'	108 'l'	108 'l'	111 'o'	44 ','	32 ' '	87 'W'
0x55555555600c:	111 'o'	114 'r'	108 'l'	100 'd'	33 '!'	10 '\n'	0 '\000'
(gdb) 





(gdb) b 29
Breakpoint 3 at 0x555555555159: file helloWorld.s, line 29.
(gdb) cont
Continuing.
Hello, World!

Breakpoint 3, main () at helloWorld.s:29
29	        ret                     # back to caller
(gdb) 





(gdb) i r rbp rsp rip
rbp            0x0                 0x0
rsp            0x7fffffffde88      0x7fffffffde88
rip            0x555555555159      0x555555555159 <main+32>
(gdb) 




(gdb) cont
Continuing.
[Inferior 1 (process 2905) exited normally]
(gdb) 



